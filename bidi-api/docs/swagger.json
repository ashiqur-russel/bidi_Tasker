{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Check application health",
        "tags": [
          "health"
        ]
      }
    },
    "/api/v1/health/ready": {
      "get": {
        "operationId": "HealthController_ready",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Application is ready",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ready"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "2024-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Check if application is ready to serve requests",
        "tags": [
          "health"
        ]
      }
    },
    "/api/v1/health/live": {
      "get": {
        "operationId": "HealthController_live",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Application is alive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "alive"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 123.456
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Check if application is alive",
        "tags": [
          "health"
        ]
      }
    },
    "/api/v1/todos": {
      "post": {
        "operationId": "TodoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new todo",
        "tags": [
          "todos"
        ]
      },
      "get": {
        "operationId": "TodoController_findAll",
        "parameters": [
          {
            "name": "completed",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "desc",
              "example": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Todo"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "example": 10
                            },
                            "total": {
                              "type": "number",
                              "example": 100
                            },
                            "totalPages": {
                              "type": "number",
                              "example": 10
                            },
                            "hasNext": {
                              "type": "boolean",
                              "example": true
                            },
                            "hasPrev": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get all todos with pagination",
        "tags": [
          "todos"
        ]
      }
    },
    "/api/v1/todos/stats": {
      "get": {
        "operationId": "TodoController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "completed": {
                      "type": "number"
                    },
                    "pending": {
                      "type": "number"
                    },
                    "byPriority": {
                      "type": "object",
                      "properties": {
                        "low": {
                          "type": "number"
                        },
                        "medium": {
                          "type": "number"
                        },
                        "high": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get todo statistics",
        "tags": [
          "todos"
        ]
      }
    },
    "/api/v1/todos/{id}": {
      "get": {
        "operationId": "TodoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Todo ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Todo not found"
          }
        },
        "summary": "Get a specific todo by ID",
        "tags": [
          "todos"
        ]
      },
      "patch": {
        "operationId": "TodoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Todo ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or invalid ID"
          },
          "404": {
            "description": "Todo not found"
          }
        },
        "summary": "Update a todo",
        "tags": [
          "todos"
        ]
      },
      "delete": {
        "operationId": "TodoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Todo ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Todo deleted successfully"
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Todo not found"
          }
        },
        "summary": "Delete a todo",
        "tags": [
          "todos"
        ]
      }
    },
    "/api/v1/todos/{id}/toggle": {
      "patch": {
        "operationId": "TodoController_toggleComplete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Todo ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo completion status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Todo not found"
          }
        },
        "summary": "Toggle todo completion status",
        "tags": [
          "todos"
        ]
      }
    }
  },
  "info": {
    "title": "Bidi Todo API",
    "description": "A production-grade todo API with comprehensive features",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "todos",
      "description": "Todo management endpoints"
    },
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "health",
      "description": "Health check endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Mock API Server (Frontend Development)"
    },
    {
      "url": "http://localhost:3000",
      "description": "Production API Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateTodoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Todo title",
            "example": "Complete project setup",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "description": "Todo description",
            "example": "Set up the initial project structure and dependencies",
            "maxLength": 1000
          },
          "completed": {
            "type": "boolean",
            "description": "Todo completion status",
            "example": false,
            "default": false
          },
          "priority": {
            "type": "string",
            "description": "Todo priority level",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium",
            "default": "medium"
          },
          "dueDate": {
            "type": "string",
            "description": "Todo due date (ISO string)",
            "example": "2024-12-31T00:00:00.000Z"
          }
        },
        "required": [
          "title"
        ]
      },
      "Todo": {
        "type": "object",
        "properties": {}
      },
      "UpdateTodoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Todo title",
            "example": "Updated project setup",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "description": "Todo description",
            "example": "Updated project structure and dependencies",
            "maxLength": 1000
          },
          "completed": {
            "type": "boolean",
            "description": "Todo completion status",
            "example": true
          },
          "priority": {
            "type": "string",
            "description": "Todo priority level",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "high"
          },
          "dueDate": {
            "type": "string",
            "description": "Todo due date (ISO string)",
            "example": "2024-12-31T00:00:00.000Z"
          }
        }
      }
    }
  }
}